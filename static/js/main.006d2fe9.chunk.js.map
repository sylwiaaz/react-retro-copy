{"version":3,"sources":["App/components/Sidebar/UserList/UserList.jsx","App/components/Sidebar/SidebarContainer.jsx","App/store/actions/sidebarAction.js","App/store/actions/addColumnAction.js","App/store/actions/addNoteAction.js","App/store/actions/removeColumnAction.js","App/store/actions/removeNoteAction.js","App/store/actions/sortAction.js","App/store/actions/likeAction.js","App/components/Board/Note/Note.jsx","App/components/Buttons/addButton.jsx","App/components/Board/Column/Column.jsx","App/components/Board/Board.jsx","App/App.js","App/store/reducers/columnReducer.js","App/store/reducers/sidebarReducer.js","App/store/reducers/index.js","App/store/index.js","index.js"],"names":["users","User","userName","className","UserList","userList","map","user","key","connect","state","isOpenSidebar","openSidebar","dispatch","Fragment","onClick","type","addColumn","name","payload","addNote","content","columnId","removeColumn","removeNote","noteId","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","handleLike","likeAuthor","Note","isLikedNote","handleRemoveNote","props","id","handleAddLike","setState","prevState","this","index","likes","provided","ref","innerRef","draggableProps","dragHandleProps","length","React","Component","AddButton","formOpen","text","handleOpenForm","handleTextChange","e","target","value","handleAddColumn","handleAddNote","closeForm","column","renderForm","placeholder","btnTitle","formStyle","autoFocus","onBlur","onChange","onMouseDown","renderAddButton","btnStyle","buttonText","notes","handleRemoveColumn","droppableId","droppableProps","note","Board","handleDragEnd","result","destination","source","columnList","columns","onDragEnd","direction","style","marginLeft","width","opacity","App","nextColumnId","nextNoteId","initialState","addNewColumn","action","newColumn","filter","addNewNote","newNote","newNotesArray","dragHandle","newState","splice","find","likeHandle","newNotesList","newLikesArray","includes","author","push","columnReducer","sidebarReducer","combineReducers","store","createStore","combineReducer","subscribe","console","log","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.006d2fe9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./userlist.scss\";\nimport { FaRegUserCircle } from \"react-icons/fa\";\n\nconst users = [\"Jan Nowak\", \"Kasia Kowalska\", \"Andrzej Wojciechowski\"];\n\nconst UserList = () => {\n  const userList = users.map(user => <User key={user} userName={user} />);\n  return (\n    <div className=\"contact-list\">\n      <h3 className=\"team-name\">Our team</h3>\n      <ul>{userList}</ul>\n    </div>\n  );\n};\n\nconst User = ({ userName }) => {\n  return (\n    <li>\n      <FaRegUserCircle className=\"user-icon\" />\n      <p className=\"user-name\">{userName}</p>\n    </li>\n  );\n};\n\nexport default UserList;\n","import React from \"react\";\nimport UserList from \"./UserList/UserList\";\nimport \"./sidebar.scss\";\nimport { FaArrowCircleLeft, FaArrowCircleRight } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport { hideSidebar, showSidebar } from \"../../store/actions/sidebarAction\";\n\nconst SidebarContainer = ({ isOpenSidebar, dispatch }) => {\n  const handleToggleSidebar = () => {\n    isOpenSidebar ? dispatch(hideSidebar()) : dispatch(showSidebar());\n  };\n  return (\n    <React.Fragment>\n      <button\n        onClick={handleToggleSidebar}\n        className={`toggle-btn ${isOpenSidebar ? \"open\" : \"\"}`}\n      >\n        {isOpenSidebar ? <FaArrowCircleLeft /> : <FaArrowCircleRight />}\n      </button>\n      <div className={`sidebar-container ${isOpenSidebar ? \"\" : \"hide\"}`}>\n        <UserList />\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isOpenSidebar: state.openSidebar.isOpenSidebar\n  };\n};\n\nexport default connect(mapStateToProps)(SidebarContainer);\n","export const showSidebar = () => {\n  return {\n    type: \"SHOW_SIDEBAR\"\n  };\n};\n\nexport const hideSidebar = () => {\n  return {\n    type: \"HIDE_SIDEBAR\"\n  };\n};\n","const addColumn = name => {\n  return {\n    type: \"ADD_COLUMN\",\n    payload: name\n  };\n};\n\nexport default addColumn;\n","const addNote = (content, columnId) => {\n  return {\n    type: \"ADD_NOTE\",\n    payload: { content, columnId }\n  };\n};\n\nexport default addNote;\n","const removeColumn = columnId => {\n  return {\n    type: \"REMOVE_COLUMN\",\n    payload: { columnId }\n  };\n};\n\nexport default removeColumn;\n","const removeNote = (noteId, columnId) => {\n  return {\n    type: \"REMOVE_NOTE\",\n    payload: { noteId, columnId }\n  };\n};\n\nexport default removeNote;\n","const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return {\n    type: \"DRAG_HAPPENED\",\n    payload: {\n      droppableIdStart,\n      droppableIdEnd,\n      droppableIndexStart,\n      droppableIndexEnd,\n      draggableId,\n      type\n    }\n  };\n};\n\nexport default sort;\n","const handleLike = (noteId, likeAuthor) => {\n  return {\n    type: \"HANDLE_LIKE\",\n    payload: { noteId, likeAuthor }\n  };\n};\n\nexport default handleLike;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { removeNote, handleLike } from \"../../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { AiFillLike } from \"react-icons/ai\";\nimport { MdClose } from \"react-icons/md\";\nimport \"./note.scss\";\n\nclass Note extends React.Component {\n  state = {\n    isLikedNote: false\n  };\n\n  handleRemoveNote = () => {\n    const { id, dispatch, columnId } = this.props;\n    dispatch(removeNote(id, columnId));\n  };\n\n  handleAddLike = () => {\n    const { id, dispatch } = this.props;\n    dispatch(handleLike(id, \"user1\"));\n    this.setState(prevState => ({\n      isLikedNote: !prevState.isLikedNote\n    }));\n  };\n  render() {\n    const { id, content, index, likes } = this.props;\n    return (\n      <Draggable draggableId={id} index={index}>\n        {provided => (\n          <div\n            className=\"note\"\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <p className=\"note-content\">{content}</p>\n            <div className=\"buttons\">\n              <button onClick={this.handleRemoveNote} className=\"remove-btn\">\n                <MdClose className=\"icon\" />\n              </button>\n              <button onClick={this.handleAddLike} className={\"like-btn\"}>\n                {likes.length ? (\n                  <span className=\"likes-amount\">{likes.length}</span>\n                ) : null}\n                <AiFillLike\n                  className={\n                    this.state.isLikedNote ? \"icon liked-icon\" : \"icon\"\n                  }\n                />\n              </button>\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nNote.propTypes = {\n  id: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  columnId: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default connect()(Note);\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport \"./buttons.scss\";\nimport { connect } from \"react-redux\";\nimport { addColumn, addNote } from \"../../store/actions/index\";\nimport { FaPlus } from \"react-icons/fa\";\n\nclass AddButton extends React.Component {\n  state = {\n    formOpen: false,\n    text: \"\"\n  };\n\n  handleOpenForm = () => {\n    this.setState(() => ({\n      formOpen: true\n    }));\n  };\n\n  handleTextChange = e => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n\n  handleAddColumn = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n    if (text) {\n      dispatch(addColumn(text));\n      this.setState({\n        text: \"\"\n      });\n    }\n    return;\n  };\n\n  handleAddNote = () => {\n    const { dispatch, columnId } = this.props;\n    const { text } = this.state;\n    if (text) {\n      dispatch(addNote(text, columnId));\n      this.setState({\n        text: \"\"\n      });\n    }\n    return;\n  };\n\n  closeForm = () => {\n    this.setState(() => ({\n      formOpen: false\n    }));\n    !this.props.column ? this.handleAddNote() : this.handleAddColumn();\n  };\n\n  renderForm = () => {\n    const { column } = this.props;\n    const placeholder = column ? \"Enter column title\" : \"Enter a note text\";\n    const btnTitle = column ? \"Add column\" : \"Add note\";\n    const formStyle = column ? \"column-form\" : \"note-form\";\n    return (\n      <div className={formStyle}>\n        <TextareaAutosize\n          autoFocus\n          placeholder={placeholder}\n          onBlur={this.closeForm}\n          value={this.state.value}\n          onChange={this.handleTextChange}\n        />\n        <button\n          className=\"add-btn\"\n          onMouseDown={column ? this.handleAddColumn : this.handleAddNote}\n        >\n          {btnTitle}\n        </button>\n      </div>\n    );\n  };\n\n  renderAddButton = () => {\n    const { column, btnStyle } = this.props;\n    const buttonText = column ? \"New column\" : \"Create a note\";\n    return (\n      <button className={btnStyle} onClick={this.handleOpenForm}>\n        <FaPlus className=\"plus-icon\" />\n        {buttonText}\n      </button>\n    );\n  };\n  render() {\n    return this.state.formOpen ? this.renderForm() : this.renderAddButton();\n  }\n}\n\nAddButton.propTypes = {\n  column: PropTypes.bool,\n  btnStyle: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default connect()(AddButton);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Note from \"../Note/Note\";\nimport AddButton from \"../../Buttons/addButton\";\nimport { removeColumn } from \"../../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport \"./column.scss\";\nimport { FaTrashAlt } from \"react-icons/fa\";\n\nconst Column = ({ name, id, notes, dispatch, index }) => {\n  const handleRemoveColumn = () => {\n    dispatch(removeColumn(id));\n  };\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {provided => (\n        <div\n          className=\"column-board\"\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n          {...provided.dragHandleProps}\n        >\n          <h4 className=\"column-name\">{name}</h4>\n          <button className=\"remove-btn col\" onClick={handleRemoveColumn}>\n            <FaTrashAlt className=\"trash-icon\" />\n          </button>\n          <Droppable droppableId={id}>\n            {provided => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"notes-container\"\n              >\n                {notes.map((note, index) => (\n                  <Note key={note.id} {...note} index={index} columnId={id} />\n                ))}\n                {provided.placeholder}\n                <AddButton columnId={id} btnStyle=\"create-note\" />\n              </div>\n            )}\n          </Droppable>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nColumn.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  notes: PropTypes.array.isRequired,\n  index: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default connect()(Column);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./board.scss\";\nimport Column from \"./Column/Column\";\nimport { connect } from \"react-redux\";\nimport AddButton from \"../Buttons/addButton\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { sort } from \"../../store/actions/index\";\n\nclass Board extends React.Component {\n  handleDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n    if (!destination) {\n      return;\n    }\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  render() {\n    const columnList = this.props.columns.map((column, index) => (\n      <Column {...column} key={column.id} index={index} />\n    ));\n    return (\n      <DragDropContext onDragEnd={this.handleDragEnd}>\n        <div className=\"board\">\n          <Droppable direction=\"horizontal\" type=\"list\" droppableId=\"all-list\">\n            {provided => (\n              <div\n                className=\"column-container\"\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {columnList}\n                {provided.placeholder}\n                <AddButton column btnStyle=\"add-column\" />\n                <div\n                  style={{\n                    marginLeft: \"40px\",\n                    width: \"30px\",\n                    opacity: 0\n                  }}\n                >\n                  null\n                </div>\n              </div>\n            )}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    columns: state.columns\n  };\n};\n\nBoard.propTypes = {\n  columns: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps)(Board);\n","import React from \"react\";\nimport \"./App.css\";\nimport SideBarContainer from \"./components/Sidebar/SidebarContainer\";\nimport Board from \"./components/Board/Board\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SideBarContainer />\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","let nextColumnId = 2;\nlet nextNoteId = 4;\nconst initialState = [\n  {\n    id: \"column-0\",\n    name: \"Done\",\n    notes: [\n      { id: \"note-0\", content: \"some content\", likes: [] },\n      {\n        id: \"note-1\",\n        content: \"some content lorem ipsum igfkeugbf\",\n        likes: []\n      }\n    ]\n  },\n  {\n    id: \"column-1\",\n    name: \"ToDo\",\n    notes: [\n      {\n        id: \"note-2\",\n        content: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit.\",\n        likes: []\n      },\n      {\n        id: \"note-3\",\n        content:\n          \"Perspiciatis veniam eligendi placeat doloremque autem iusto amet eius officiis rerum neque\",\n        likes: []\n      }\n    ]\n  }\n];\n\nconst addNewColumn = (state, action) => {\n  const newColumn = {\n    name: action.payload,\n    notes: [],\n    id: `column-${nextColumnId}`\n  };\n  nextColumnId++;\n  return [...state, newColumn];\n};\n\nconst removeColumn = (state, action) => {\n  return state.filter(column => column.id !== action.payload.columnId);\n};\n\nconst addNewNote = (state, action) => {\n  const newNote = {\n    content: action.payload.content,\n    id: `note-${nextNoteId}`,\n    likes: []\n  };\n  nextNoteId++;\n  return state.map(column => {\n    if (column.id === action.payload.columnId) {\n      return {\n        ...column,\n        notes: [...column.notes, newNote]\n      };\n    } else {\n      return column;\n    }\n  });\n};\n\nconst removeNote = (state, action) => {\n  const { columnId, noteId } = action.payload;\n  return state.map(column => {\n    if (column.id === columnId) {\n      const newNotesArray = column.notes.filter(note => note.id !== noteId);\n      return { ...column, notes: newNotesArray };\n    } else {\n      return column;\n    }\n  });\n};\n\nconst dragHandle = (state, action) => {\n  const {\n    droppableIdStart,\n    droppableIdEnd,\n    droppableIndexStart,\n    droppableIndexEnd,\n    type\n  } = action.payload;\n  let newState = [...state];\n\n  if (type === \"list\") {\n    const column = newState.splice(droppableIndexStart, 1);\n    newState.splice(droppableIndexEnd, 0, ...column);\n    return newState;\n  }\n\n  if (droppableIdStart === droppableIdEnd) {\n    // in same column\n    const column = newState.find(column => column.id === droppableIdStart);\n    const note = column.notes.splice(droppableIndexStart, 1);\n    column.notes.splice(droppableIndexEnd, 0, ...note);\n  }\n\n  if (droppableIdStart !== droppableIdEnd) {\n    const columnStart = state.find(column => column.id === droppableIdStart);\n    const note = columnStart.notes.splice(droppableIndexStart, 1);\n    const columnEnd = state.find(column => column.id === droppableIdEnd);\n    columnEnd.notes.splice(droppableIndexEnd, 0, ...note);\n  }\n  return newState;\n};\n\nconst likeHandle = (state, action) => {\n  const { noteId, likeAuthor } = action.payload;\n  return state.map(column => {\n    const newNotesList = column.notes.map(note => {\n      if (note.id === noteId) {\n        let newLikesArray = [...note.likes];\n        if (!newLikesArray.includes(likeAuthor)) {\n          newLikesArray.push(likeAuthor);\n        } else {\n          newLikesArray = newLikesArray.filter(author => author !== likeAuthor);\n        }\n        return { ...note, likes: newLikesArray };\n      } else {\n        return note;\n      }\n    });\n    return { ...column, notes: newNotesList };\n  });\n};\n\nconst columnReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_COLUMN\":\n      return addNewColumn(state, action);\n    case \"REMOVE_COLUMN\":\n      return removeColumn(state, action);\n    case \"DRAG_HAPPENED\":\n      return dragHandle(state, action);\n    case \"ADD_NOTE\":\n      return addNewNote(state, action);\n    case \"REMOVE_NOTE\":\n      return removeNote(state, action);\n    case \"HANDLE_LIKE\":\n      return likeHandle(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default columnReducer;\n","const initialState = {\n  isOpenSidebar: false\n};\n\nconst sidebarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SHOW_SIDEBAR\":\n      return { ...state, isOpenSidebar: true };\n    case \"HIDE_SIDEBAR\":\n      return { ...state, isOpenSidebar: false };\n    default:\n      return state;\n  }\n};\n\nexport default sidebarReducer;\n","import { combineReducers } from \"redux\";\nimport columnReducer from \"./columnReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\n\nexport default combineReducers({\n  columns: columnReducer,\n  openSidebar: sidebarReducer\n});\n","import { createStore } from \"redux\";\nimport combineReducer from \"./reducers/index\";\n\nexport const store = createStore(combineReducer);\n\nstore.subscribe(() => {\n  console.log(store.getState());\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/App/App';\nimport { Provider } from 'react-redux';\nimport { store } from './App/store/index';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}