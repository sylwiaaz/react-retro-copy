{"version":3,"sources":["App/components/Sidebar/UserList/UserList.jsx","App/components/Sidebar/SidebarContainer.jsx","App/store/actions/sidebarAction.js","App/store/actions/addColumnAction.js","App/store/actions/addNoteAction.js","App/store/actions/removeColumnAction.js","App/store/actions/removeNoteAction.js","App/store/actions/sortAction.js","App/store/actions/likeAction.js","App/store/actions/editColumnNameAction.js","App/store/actions/editNoteContentAction.js","App/components/Buttons/Textarea.jsx","App/components/Board/Note/Note.jsx","App/components/Buttons/addButton.jsx","App/components/Board/Column/Column.jsx","App/components/Board/Board.jsx","App/App.js","App/store/reducers/columnReducer.js","App/store/reducers/sidebarReducer.js","App/store/reducers/index.js","App/store/index.js","index.js"],"names":["users","User","userName","className","UserList","userList","map","user","key","connect","state","isOpenSidebar","openSidebar","dispatch","Fragment","onClick","type","addColumn","name","payload","addNote","content","columnId","removeColumn","removeNote","noteId","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","handleLike","likeAuthor","editColumnName","columnName","editNoteContent","moveCursorToEnd","e","tempValue","target","value","Textarea","onBlur","onChange","placeholder","autoFocus","onFocus","onKeyDown","call","handleKeyDown","id","index","likes","useState","isLikedNote","setLikedNote","setValue","openInput","setOpenInput","handleRemoveNote","handleAddLike","handleClick","handleOnChange","handleBlur","provided","ref","innerRef","draggableProps","dragHandleProps","length","AddButton","formOpen","text","handleOpenForm","setState","handleTextChange","handleAddColumn","props","handleAddNote","closeForm","column","renderForm","btnTitle","formStyle","onMouseDown","renderAddButton","btnStyle","buttonText","this","React","Component","notes","handleRemoveColumn","droppableId","droppableProps","note","Board","handleDragEnd","result","destination","source","columnList","columns","onDragEnd","direction","style","marginLeft","width","opacity","App","nextColumnId","nextNoteId","initialState","addNewColumn","action","newColumn","filter","addNewNote","newNote","newNotesArray","dragHandle","newState","splice","find","console","log","likeHandle","newNotesList","newLikesArray","includes","author","push","columnReducer","sidebarReducer","combineReducers","store","createStore","combineReducer","subscribe","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72064a62.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./userlist.scss\";\nimport { FaRegUserCircle } from \"react-icons/fa\";\n\nconst users = [\"Jan Nowak\", \"Kasia Kowalska\", \"Andrzej Wojciechowski\"];\n\nconst UserList = () => {\n  const userList = users.map(user => <User key={user} userName={user} />);\n  return (\n    <div className=\"contact-list\">\n      <h3 className=\"team-name\">Our team</h3>\n      <ul>{userList}</ul>\n    </div>\n  );\n};\n\nconst User = ({ userName }) => {\n  return (\n    <li>\n      <FaRegUserCircle className=\"user-icon\" />\n      <p className=\"user-name\">{userName}</p>\n    </li>\n  );\n};\n\nexport default UserList;\n","import React from \"react\";\nimport UserList from \"./UserList/UserList\";\nimport \"./sidebar.scss\";\nimport { FaArrowCircleLeft, FaArrowCircleRight } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport { hideSidebar, showSidebar } from \"../../store/actions/sidebarAction\";\n\nconst SidebarContainer = ({ isOpenSidebar, dispatch }) => {\n  const handleToggleSidebar = () => {\n    isOpenSidebar ? dispatch(hideSidebar()) : dispatch(showSidebar());\n  };\n  return (\n    <React.Fragment>\n      <button\n        onClick={handleToggleSidebar}\n        className={`toggle-btn ${isOpenSidebar ? \"open\" : \"\"}`}\n      >\n        {isOpenSidebar ? <FaArrowCircleLeft /> : <FaArrowCircleRight />}\n      </button>\n      <div className={`sidebar-container ${isOpenSidebar ? \"\" : \"hide\"}`}>\n        <UserList />\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isOpenSidebar: state.openSidebar.isOpenSidebar\n  };\n};\n\nexport default connect(mapStateToProps)(SidebarContainer);\n","export const showSidebar = () => {\n  return {\n    type: \"SHOW_SIDEBAR\"\n  };\n};\n\nexport const hideSidebar = () => {\n  return {\n    type: \"HIDE_SIDEBAR\"\n  };\n};\n","const addColumn = name => {\n  return {\n    type: \"ADD_COLUMN\",\n    payload: name\n  };\n};\n\nexport default addColumn;\n","const addNote = (content, columnId) => {\n  return {\n    type: \"ADD_NOTE\",\n    payload: { content, columnId }\n  };\n};\n\nexport default addNote;\n","const removeColumn = columnId => {\n  return {\n    type: \"REMOVE_COLUMN\",\n    payload: { columnId }\n  };\n};\n\nexport default removeColumn;\n","const removeNote = (noteId, columnId) => {\n  return {\n    type: \"REMOVE_NOTE\",\n    payload: { noteId, columnId }\n  };\n};\n\nexport default removeNote;\n","const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return {\n    type: \"DRAG_HAPPENED\",\n    payload: {\n      droppableIdStart,\n      droppableIdEnd,\n      droppableIndexStart,\n      droppableIndexEnd,\n      draggableId,\n      type\n    }\n  };\n};\n\nexport default sort;\n","const handleLike = (noteId, likeAuthor) => {\n  return {\n    type: \"HANDLE_LIKE\",\n    payload: { noteId, likeAuthor }\n  };\n};\n\nexport default handleLike;\n","const editColumnName = (columnId, columnName) => {\n    return {\n      type: \"EDIT_COLUMN_NAME\",\n      payload: {columnId, columnName}\n    };\n  };\n  \n  export default editColumnName;\n  ","const editNoteContent = (columnId, noteId, content) => {\n  return {\n    type: \"EDIT_NOTE_CONTENT\",\n    payload: { columnId, noteId, content }\n  };\n};\n\nexport default editNoteContent;\n","import React from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nconst moveCursorToEnd = e => {\n  const tempValue = e.target.value;\n  e.target.value = \"\";\n  e.target.value = tempValue;\n};\n\nconst handleKeyDown = (e, call) => {\n  if (e.key === \"Enter\") {\n    call();\n  }\n};\n\nconst Textarea = ({ onBlur, value, onChange, placeholder }) => {\n  return (\n    <TextareaAutosize\n      autoFocus\n      placeholder={placeholder ? placeholder : null}\n      onBlur={onBlur}\n      value={value}\n      onChange={onChange}\n      onFocus={moveCursorToEnd}\n      onKeyDown={e => {\n        handleKeyDown(e, onBlur);\n      }}\n    />\n  );\n};\n\nexport default Textarea;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  removeNote,\n  handleLike,\n  editNoteContent\n} from \"../../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { AiFillLike } from \"react-icons/ai\";\nimport { MdClose } from \"react-icons/md\";\nimport \"./note.scss\";\nimport Textarea from \"../../Buttons/Textarea\";\n\nconst Note = ({ id, dispatch, columnId, content, index, likes }) => {\n  const [isLikedNote, setLikedNote] = useState(false);\n  const [value, setValue] = useState(content);\n  const [openInput, setOpenInput] = useState(false);\n\n  const handleRemoveNote = () => {\n    dispatch(removeNote(id, columnId));\n  };\n\n  const handleAddLike = () => {\n    dispatch(handleLike(id, \"user1\"));\n    setLikedNote(!isLikedNote);\n  };\n\n  const handleClick = () => {\n    setOpenInput(true);\n  };\n\n  const handleOnChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleBlur = e => {\n    setOpenInput(false);\n    if (value) {\n      dispatch(editNoteContent(columnId, id, value));\n    }\n  };\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {provided => (\n        <div\n          className=\"note\"\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          {openInput ? (\n            <Textarea\n              onBlur={handleBlur}\n              value={value}\n              onChange={handleOnChange}\n            />\n          ) : (\n            <p className=\"note-content\" onClick={handleClick}>\n              {content}\n            </p>\n          )}\n          <div className=\"buttons\">\n            <button onClick={handleRemoveNote} className=\"remove-btn\">\n              <MdClose className=\"icon\" />\n            </button>\n            <button onClick={handleAddLike} className={\"like-btn\"}>\n              {likes.length ? (\n                <span className=\"likes-amount\">{likes.length}</span>\n              ) : null}\n              <AiFillLike\n                className={isLikedNote ? \"icon liked-icon\" : \"icon\"}\n              />\n            </button>\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nNote.propTypes = {\n  id: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  columnId: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default connect()(Note);\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\n// import TextareaAutosize from \"react-textarea-autosize\";\nimport \"./buttons.scss\";\nimport { connect } from \"react-redux\";\nimport { addColumn, addNote } from \"../../store/actions/index\";\nimport { FaPlus } from \"react-icons/fa\";\nimport Textarea from \"./Textarea\";\n\nclass AddButton extends React.Component {\n  state = {\n    formOpen: false,\n    text: \"\"\n  };\n\n  handleOpenForm = () => {\n    this.setState(() => ({\n      formOpen: true\n    }));\n  };\n\n  handleTextChange = e => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n\n  handleAddColumn = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n    if (text) {\n      dispatch(addColumn(text));\n      this.setState({\n        text: \"\"\n      });\n    }\n    return;\n  };\n\n  handleAddNote = () => {\n    const { dispatch, columnId } = this.props;\n    const { text } = this.state;\n    if (text) {\n      dispatch(addNote(text, columnId));\n      this.setState({\n        text: \"\"\n      });\n    }\n    return;\n  };\n\n  closeForm = () => {\n    this.setState(() => ({\n      formOpen: false\n    }));\n    !this.props.column ? this.handleAddNote() : this.handleAddColumn();\n  };\n\n  renderForm = () => {\n    const { column } = this.props;\n    const placeholder = column ? \"Enter column title\" : \"Enter a note text\";\n    const btnTitle = column ? \"Add column\" : \"Add note\";\n    const formStyle = column ? \"column-form\" : \"note-form\";\n    return (\n      <div className={formStyle}>\n        <Textarea\n          placeholder={placeholder}\n          onBlur={this.closeForm}\n          value={this.state.value}\n          onChange={this.handleTextChange}\n        />\n        <button\n          className=\"add-btn\"\n          onMouseDown={column ? this.handleAddColumn : this.handleAddNote}\n        >\n          {btnTitle}\n        </button>\n      </div>\n    );\n  };\n\n  renderAddButton = () => {\n    const { column, btnStyle } = this.props;\n    const buttonText = column ? \"New column\" : \"Create a note\";\n    return (\n      <button className={btnStyle} onClick={this.handleOpenForm}>\n        <FaPlus className=\"plus-icon\" />\n        {buttonText}\n      </button>\n    );\n  };\n  render() {\n    return this.state.formOpen ? this.renderForm() : this.renderAddButton();\n  }\n}\n\nAddButton.propTypes = {\n  column: PropTypes.bool,\n  btnStyle: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default connect()(AddButton);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Note from \"../Note/Note\";\nimport AddButton from \"../../Buttons/addButton\";\nimport { removeColumn, editColumnName } from \"../../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport \"./column.scss\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport Textarea from \"../../Buttons/Textarea\";\n\nconst Column = ({ name, id, notes, dispatch, index }) => {\n  const [value, setValue] = React.useState(\"\");\n  const [openInput, setOpenInput] = React.useState(false);\n\n  const handleRemoveColumn = () => {\n    dispatch(removeColumn(id));\n  };\n\n  const handleClick = () => {\n    setOpenInput(true);\n  };\n\n  const handleOnChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleBlur = e => {\n    setOpenInput(false);\n    if (value) {\n      dispatch(editColumnName(id, value));\n    }\n    setValue(\"\");\n  };\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {provided => (\n        <div\n          className=\"column-board\"\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n          {...provided.dragHandleProps}\n        >\n          {openInput ? (\n            <Textarea\n              value={value}\n              onChange={handleOnChange}\n              onBlur={handleBlur}\n            />\n          ) : (\n            <h4 className=\"column-name\" onClick={handleClick}>\n              {name}\n            </h4>\n          )}\n\n          <button className=\"remove-btn col\" onClick={handleRemoveColumn}>\n            <FaTrashAlt className=\"trash-icon\" />\n          </button>\n          <Droppable droppableId={id}>\n            {provided => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"notes-container\"\n              >\n                {notes.map((note, index) => (\n                  <Note key={note.id} {...note} index={index} columnId={id} />\n                ))}\n                {provided.placeholder}\n                <AddButton columnId={id} btnStyle=\"create-note\" />\n              </div>\n            )}\n          </Droppable>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nColumn.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  notes: PropTypes.array.isRequired,\n  index: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default connect()(Column);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./board.scss\";\nimport Column from \"./Column/Column\";\nimport { connect } from \"react-redux\";\nimport AddButton from \"../Buttons/addButton\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { sort } from \"../../store/actions/index\";\n\nclass Board extends React.Component {\n  handleDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n    if (!destination) {\n      return;\n    }\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  render() {\n    const columnList = this.props.columns.map((column, index) => (\n      <Column {...column} key={column.id} index={index} />\n    ));\n    return (\n      <DragDropContext onDragEnd={this.handleDragEnd}>\n        <div className=\"board\">\n          <Droppable direction=\"horizontal\" type=\"list\" droppableId=\"all-list\">\n            {provided => (\n              <div\n                className=\"column-container\"\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {columnList}\n                {provided.placeholder}\n                <AddButton column btnStyle=\"add-column\" />\n                <div\n                  style={{\n                    marginLeft: \"40px\",\n                    width: \"30px\",\n                    opacity: 0\n                  }}\n                >\n                  null\n                </div>\n              </div>\n            )}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    columns: state.columns\n  };\n};\n\nBoard.propTypes = {\n  columns: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps)(Board);\n","import React from \"react\";\nimport \"./App.css\";\nimport SideBarContainer from \"./components/Sidebar/SidebarContainer\";\nimport Board from \"./components/Board/Board\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SideBarContainer />\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","let nextColumnId = 2;\nlet nextNoteId = 5;\nconst initialState = [\n  {\n    id: \"column-0\",\n    name: \"Done\",\n    notes: [\n      {\n        id: \"note-0\",\n        content: \"quo temporibus omnis distinctio, laboriosam totam.\",\n        likes: []\n      },\n      {\n        id: \"note-1\",\n        content:\n          \"Labore recusandae nulla nesciunt esse, consequuntur fuga reiciendis consectetur.\",\n        likes: []\n      }\n    ]\n  },\n  {\n    id: \"column-1\",\n    name: \"ToDo\",\n    notes: [\n      {\n        id: \"note-2\",\n        content: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit.\",\n        likes: []\n      },\n      {\n        id: \"note-3\",\n        content:\n          \"Perspiciatis veniam eligendi placeat doloremque autem iusto amet eius officiis rerum neque\",\n        likes: []\n      },\n      {\n        id: \"note-4\",\n        content: \"Labore quis incidunt tempore hic ut. Fugit.\",\n        likes: []\n      }\n    ]\n  }\n];\n\nconst addNewColumn = (state, action) => {\n  const newColumn = {\n    name: action.payload,\n    notes: [],\n    id: `column-${nextColumnId}`\n  };\n  nextColumnId++;\n  return [...state, newColumn];\n};\n\nconst removeColumn = (state, action) => {\n  return state.filter(column => column.id !== action.payload.columnId);\n};\n\nconst addNewNote = (state, action) => {\n  const newNote = {\n    content: action.payload.content,\n    id: `note-${nextNoteId}`,\n    likes: []\n  };\n  nextNoteId++;\n  return state.map(column => {\n    if (column.id === action.payload.columnId) {\n      return {\n        ...column,\n        notes: [...column.notes, newNote]\n      };\n    } else {\n      return column;\n    }\n  });\n};\n\nconst removeNote = (state, action) => {\n  const { columnId, noteId } = action.payload;\n  return state.map(column => {\n    if (column.id === columnId) {\n      const newNotesArray = column.notes.filter(note => note.id !== noteId);\n      return { ...column, notes: newNotesArray };\n    } else {\n      return column;\n    }\n  });\n};\n\nconst dragHandle = (state, action) => {\n  const {\n    droppableIdStart,\n    droppableIdEnd,\n    droppableIndexStart,\n    droppableIndexEnd,\n    type\n  } = action.payload;\n  let newState = [...state];\n\n  if (type === \"list\") {\n    const column = newState.splice(droppableIndexStart, 1);\n    newState.splice(droppableIndexEnd, 0, ...column);\n    return newState;\n  }\n\n  if (droppableIdStart === droppableIdEnd) {\n    // in same column\n    const column = newState.find(column => column.id === droppableIdStart);\n    const note = column.notes.splice(droppableIndexStart, 1);\n    column.notes.splice(droppableIndexEnd, 0, ...note);\n  }\n\n  if (droppableIdStart !== droppableIdEnd) {\n    const columnStart = state.find(column => column.id === droppableIdStart);\n    const note = columnStart.notes.splice(droppableIndexStart, 1);\n    const columnEnd = state.find(column => column.id === droppableIdEnd);\n    columnEnd.notes.splice(droppableIndexEnd, 0, ...note);\n  }\n  return newState;\n};\n\nconst editColumnName = (state, action) => {\n  const { columnId, columnName } = action.payload;\n  return state.map(column => {\n    if (column.id === columnId && column.name !== columnName) {\n      // if (column.name !== columnName) {\n      console.log(\"okkkkk\");\n      return { ...column, name: columnName };\n      // }\n    }\n    return { ...column };\n  });\n};\n\nconst likeHandle = (state, action) => {\n  const { noteId, likeAuthor } = action.payload;\n  return state.map(column => {\n    const newNotesList = column.notes.map(note => {\n      if (note.id === noteId) {\n        let newLikesArray = [...note.likes];\n        if (!newLikesArray.includes(likeAuthor)) {\n          newLikesArray.push(likeAuthor);\n        } else {\n          newLikesArray = newLikesArray.filter(author => author !== likeAuthor);\n        }\n        return { ...note, likes: newLikesArray };\n      } else {\n        return note;\n      }\n    });\n    return { ...column, notes: newNotesList };\n  });\n};\n\nconst editNoteContent = (state, action) => {\n  const { columnId, noteId, content } = action.payload;\n  return state.map(column => {\n    if (column.id === columnId) {\n      return {\n        ...column,\n        notes: column.notes.map(note => {\n          if (note.id === noteId && note.content !== content) {\n            return { ...note, content };\n          }\n          return note;\n        })\n      };\n    }\n    return column;\n  });\n};\n\nconst columnReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_COLUMN\":\n      return addNewColumn(state, action);\n    case \"REMOVE_COLUMN\":\n      return removeColumn(state, action);\n    case \"EDIT_COLUMN_NAME\":\n      return editColumnName(state, action);\n    case \"DRAG_HAPPENED\":\n      return dragHandle(state, action);\n    case \"ADD_NOTE\":\n      return addNewNote(state, action);\n    case \"REMOVE_NOTE\":\n      return removeNote(state, action);\n    case \"EDIT_NOTE_CONTENT\":\n      return editNoteContent(state, action);\n    case \"HANDLE_LIKE\":\n      return likeHandle(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default columnReducer;\n","const initialState = {\n  isOpenSidebar: false\n};\n\nconst sidebarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SHOW_SIDEBAR\":\n      return { ...state, isOpenSidebar: true };\n    case \"HIDE_SIDEBAR\":\n      return { ...state, isOpenSidebar: false };\n    default:\n      return state;\n  }\n};\n\nexport default sidebarReducer;\n","import { combineReducers } from \"redux\";\nimport columnReducer from \"./columnReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\n\nexport default combineReducers({\n  columns: columnReducer,\n  openSidebar: sidebarReducer\n});\n","import { createStore } from \"redux\";\nimport combineReducer from \"./reducers/index\";\n\nexport const store = createStore(combineReducer);\n\nstore.subscribe(() => {\n  console.log(store.getState());\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/App/App';\nimport { Provider } from 'react-redux';\nimport { store } from './App/store/index';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}