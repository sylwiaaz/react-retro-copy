{"version":3,"sources":["App/components/Sidebar/UserList/UserList.jsx","App/store/actions/sortAction.js","App/store/actions/columnActions.js","App/store/actions/noteActions.js","App/components/Sidebar/SidebarContainer.jsx","App/store/actions/sidebarActions.js","App/components/Buttons/Textarea.jsx","App/components/Board/Note/Note.jsx","App/components/Buttons/AddButton.jsx","App/components/Board/Column/Column.jsx","App/components/Board/Board.jsx","App/App.js","App/store/reducers/columnReducer.js","App/store/reducers/sidebarReducer.js","App/store/reducers/index.js","App/store/index.js","index.js"],"names":["users","User","userName","className","UserList","userList","map","user","key","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","type","payload","addColumn","name","addNote","content","columnId","connect","state","isOpenSidebar","sidebar","dispatch","Fragment","onClick","moveCursorToEnd","e","tempValue","target","value","Textarea","onBlur","onChange","placeholder","autoFocus","onFocus","onKeyDown","call","handleKeyDown","id","index","likes","useState","isLikedNote","setLikedNote","setValue","openInput","setOpenInput","handleRemoveNote","noteId","removeNote","handleAddLike","likeAuthor","handleClick","handleOnChange","handleBlur","editNoteContent","provided","ref","innerRef","draggableProps","dragHandleProps","length","AddButton","formOpen","text","handleOpenForm","setState","handleTextChange","handleAddColumn","props","handleAddNote","closeForm","column","renderForm","btnTitle","formStyle","onMouseDown","renderAddButton","btnStyle","buttonText","this","React","Component","notes","handleRemoveColumn","columnName","droppableId","droppableProps","note","Board","handleDragEnd","result","destination","source","columnList","columns","onDragEnd","direction","style","marginLeft","width","opacity","App","initialState","nextNoteId","reduce","prevVal","curentVal","nextColumnId","columnReducer","handlers","action","hasOwnProperty","createReducer","ADD_COLUMN","newColumn","REMOVE_COLUMN","filter","EDIT_COLUMN_NAME","DRAG_HAPPENED","newState","splice","find","ADD_NOTE","newNote","REMOVE_NOTE","newNotesArray","EDIT_NOTE_CONTENT","HANDLE_LIKE","newNotesList","newLikesArray","includes","author","push","sidebarReducer","combineReducers","store","createStore","combineReducer","subscribe","console","log","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1cf9061.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./userlist.scss\";\nimport { FaRegUserCircle } from \"react-icons/fa\";\n\nconst users = [\"Jan Nowak\", \"Kasia Kowalska\", \"Andrzej Wojciechowski\"];\n\nconst UserList = () => {\n  const userList = users.map(user => <User key={user} userName={user} />);\n  return (\n    <div className=\"contact-list\">\n      <h3 className=\"team-name\">Our team</h3>\n      <ul>{userList}</ul>\n    </div>\n  );\n};\n\nconst User = ({ userName }) => {\n  return (\n    <li>\n      <FaRegUserCircle className=\"user-icon\" />\n      <p className=\"user-name\">{userName}</p>\n    </li>\n  );\n};\n\nexport default UserList;\n","const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return {\n    type: \"DRAG_HAPPENED\",\n    payload: {\n      droppableIdStart,\n      droppableIdEnd,\n      droppableIndexStart,\n      droppableIndexEnd,\n      draggableId,\n      type\n    }\n  };\n};\n\nexport default sort;\n","export const addColumn = name => {\n  return {\n    type: \"ADD_COLUMN\",\n    payload: name\n  };\n};\n\nexport const editColumnName = (columnId, columnName) => {\n  return {\n    type: \"EDIT_COLUMN_NAME\",\n    payload: { columnId, columnName }\n  };\n};\n\nexport const removeColumn = columnId => {\n    return {\n      type: \"REMOVE_COLUMN\",\n      payload: { columnId }\n    };\n  };\n","export const addNote = (content, columnId) => {\n  return {\n    type: \"ADD_NOTE\",\n    payload: { content, columnId }\n  };\n};\n\nexport const editNoteContent = (columnId, noteId, content) => {\n  return {\n    type: \"EDIT_NOTE_CONTENT\",\n    payload: { columnId, noteId, content }\n  };\n};\n\nexport const handleLike = (noteId, likeAuthor) => {\n  return {\n    type: \"HANDLE_LIKE\",\n    payload: { noteId, likeAuthor }\n  };\n};\n\nexport const removeNote = (noteId, columnId) => {\n  return {\n    type: \"REMOVE_NOTE\",\n    payload: { noteId, columnId }\n  };\n};\n","import React from \"react\";\nimport UserList from \"./UserList/UserList\";\nimport \"./sidebar.scss\";\nimport { FaArrowCircleLeft, FaArrowCircleRight } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport { hideSidebar, showSidebar } from \"../../store/actions/index\";\n\nconst SidebarContainer = ({ isOpenSidebar, dispatch }) => {\n  const handleToggleSidebar = () => {\n    isOpenSidebar ? dispatch(hideSidebar()) : dispatch(showSidebar());\n  };\n  return (\n    <React.Fragment>\n      <button\n        onClick={handleToggleSidebar}\n        className={`toggle-btn ${isOpenSidebar ? \"open\" : \"\"}`}\n      >\n        {isOpenSidebar ? <FaArrowCircleLeft /> : <FaArrowCircleRight />}\n      </button>\n      <div className={`sidebar-container ${isOpenSidebar ? \"\" : \"hide\"}`}>\n        <UserList />\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isOpenSidebar: state.sidebar.isOpenSidebar\n  };\n};\n\nexport default connect(mapStateToProps)(SidebarContainer);\n","export const showSidebar = () => {\n  return {\n    type: \"SHOW_SIDEBAR\"\n  };\n};\n\nexport const hideSidebar = () => {\n  return {\n    type: \"HIDE_SIDEBAR\"\n  };\n};\n","import React from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nconst moveCursorToEnd = e => {\n  const tempValue = e.target.value;\n  e.target.value = \"\";\n  e.target.value = tempValue;\n};\n\nconst handleKeyDown = (e, call) => {\n  if (e.key === \"Enter\") {\n    call();\n  }\n};\n\nconst Textarea = ({ onBlur, value, onChange, placeholder }) => {\n  return (\n    <TextareaAutosize\n      autoFocus\n      placeholder={placeholder ? placeholder : null}\n      onBlur={onBlur}\n      value={value}\n      onChange={onChange}\n      onFocus={moveCursorToEnd}\n      onKeyDown={e => {\n        handleKeyDown(e, onBlur);\n      }}\n    />\n  );\n};\n\nexport default Textarea;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  removeNote,\n  handleLike,\n  editNoteContent\n} from \"../../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { AiFillLike } from \"react-icons/ai\";\nimport { MdClose } from \"react-icons/md\";\nimport \"./note.scss\";\nimport Textarea from \"../../Buttons/Textarea\";\n\nconst Note = ({ id, dispatch, columnId, content, index, likes }) => {\n  const [isLikedNote, setLikedNote] = useState(false);\n  const [value, setValue] = useState(content);\n  const [openInput, setOpenInput] = useState(false);\n\n  const handleRemoveNote = () => {\n    dispatch(removeNote(id, columnId));\n  };\n\n  const handleAddLike = () => {\n    dispatch(handleLike(id, \"user1\"));\n    setLikedNote(!isLikedNote);\n  };\n\n  const handleClick = () => {\n    setOpenInput(true);\n  };\n\n  const handleOnChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleBlur = e => {\n    setOpenInput(false);\n    if (value) {\n      dispatch(editNoteContent(columnId, id, value));\n    }\n  };\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {provided => (\n        <div\n          className=\"note\"\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          {openInput ? (\n            <Textarea\n              onBlur={handleBlur}\n              value={value}\n              onChange={handleOnChange}\n            />\n          ) : (\n            <p className=\"note-content\" onClick={handleClick}>\n              {content}\n            </p>\n          )}\n          <div className=\"buttons\">\n            <button onClick={handleRemoveNote} className=\"remove-btn\">\n              <MdClose className=\"icon\" />\n            </button>\n            <button onClick={handleAddLike} className={\"like-btn\"}>\n              {likes.length ? (\n                <span className=\"likes-amount\">{likes.length}</span>\n              ) : null}\n              <AiFillLike\n                className={isLikedNote ? \"icon liked-icon\" : \"icon\"}\n              />\n            </button>\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nNote.propTypes = {\n  id: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  columnId: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default connect()(Note);\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport \"./buttons.scss\";\nimport { connect } from \"react-redux\";\nimport { addColumn, addNote } from \"../../store/actions/index\";\nimport { FaPlus } from \"react-icons/fa\";\nimport Textarea from \"./Textarea\";\n\nclass AddButton extends React.Component {\n  state = {\n    formOpen: false,\n    text: \"\"\n  };\n\n  handleOpenForm = () => {\n    this.setState(() => ({\n      formOpen: true\n    }));\n  };\n\n  handleTextChange = e => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n\n  handleAddColumn = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n    if (text) {\n      dispatch(addColumn(text));\n      this.setState({\n        text: \"\"\n      });\n    }\n    return;\n  };\n\n  handleAddNote = () => {\n    const { dispatch, columnId } = this.props;\n    const { text } = this.state;\n    if (text) {\n      dispatch(addNote(text, columnId));\n      this.setState({\n        text: \"\"\n      });\n    }\n    return;\n  };\n\n  closeForm = () => {\n    this.setState(() => ({\n      formOpen: false\n    }));\n    !this.props.column ? this.handleAddNote() : this.handleAddColumn();\n  };\n\n  renderForm = () => {\n    const { column } = this.props;\n    const placeholder = column ? \"Enter column title\" : \"Enter a note text\";\n    const btnTitle = column ? \"Add column\" : \"Add note\";\n    const formStyle = column ? \"column-form\" : \"note-form\";\n    return (\n      <div className={formStyle}>\n        <Textarea\n          placeholder={placeholder}\n          onBlur={this.closeForm}\n          value={this.state.value}\n          onChange={this.handleTextChange}\n        />\n        <button\n          className=\"add-btn\"\n          onMouseDown={column ? this.handleAddColumn : this.handleAddNote}\n        >\n          {btnTitle}\n        </button>\n      </div>\n    );\n  };\n\n  renderAddButton = () => {\n    const { column, btnStyle } = this.props;\n    const buttonText = column ? \"New column\" : \"Create a note\";\n    return (\n      <button className={btnStyle} onClick={this.handleOpenForm}>\n        <FaPlus className=\"plus-icon\" />\n        {buttonText}\n      </button>\n    );\n  };\n  render() {\n    return this.state.formOpen ? this.renderForm() : this.renderAddButton();\n  }\n}\n\nAddButton.propTypes = {\n  column: PropTypes.bool,\n  btnStyle: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default connect()(AddButton);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Note from \"../Note/Note\";\nimport AddButton from \"../../Buttons/AddButton\";\nimport { removeColumn, editColumnName } from \"../../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport \"./column.scss\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport Textarea from \"../../Buttons/Textarea\";\n\nconst Column = ({ name, id, notes, dispatch, index }) => {\n  const [value, setValue] = React.useState(\"\");\n  const [openInput, setOpenInput] = React.useState(false);\n\n  const handleRemoveColumn = () => {\n    dispatch(removeColumn(id));\n  };\n\n  const handleClick = () => {\n    setOpenInput(true);\n  };\n\n  const handleOnChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleBlur = e => {\n    setOpenInput(false);\n    if (value) {\n      dispatch(editColumnName(id, value));\n    }\n    setValue(\"\");\n  };\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {provided => (\n        <div\n          className=\"column-board\"\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n          {...provided.dragHandleProps}\n        >\n          {openInput ? (\n            <Textarea\n              value={value}\n              onChange={handleOnChange}\n              onBlur={handleBlur}\n            />\n          ) : (\n            <h4 className=\"column-name\" onClick={handleClick}>\n              {name}\n            </h4>\n          )}\n\n          <button className=\"remove-btn col\" onClick={handleRemoveColumn}>\n            <FaTrashAlt className=\"trash-icon\" />\n          </button>\n          <Droppable droppableId={id}>\n            {provided => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"notes-container\"\n              >\n                {notes.map((note, index) => (\n                  <Note key={note.id} {...note} index={index} columnId={id} />\n                ))}\n                {provided.placeholder}\n                <AddButton columnId={id} btnStyle=\"create-note\" />\n              </div>\n            )}\n          </Droppable>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nColumn.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  notes: PropTypes.array.isRequired,\n  index: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default connect()(Column);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./board.scss\";\nimport Column from \"./Column/Column\";\nimport { connect } from \"react-redux\";\nimport AddButton from \"../Buttons/AddButton\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { sort } from \"../../store/actions/index\";\n\nclass Board extends React.Component {\n  handleDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n    if (!destination) {\n      return;\n    }\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  render() {\n    const columnList = this.props.columns.map((column, index) => (\n      <Column {...column} key={column.id} index={index} />\n    ));\n    return (\n      <DragDropContext onDragEnd={this.handleDragEnd}>\n        <div className=\"board\">\n          <Droppable direction=\"horizontal\" type=\"list\" droppableId=\"all-list\">\n            {provided => (\n              <div\n                className=\"column-container\"\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {columnList}\n                {provided.placeholder}\n                <AddButton column btnStyle=\"add-column\" />\n                <div\n                  style={{\n                    marginLeft: \"40px\",\n                    width: \"30px\",\n                    opacity: 0\n                  }}\n                >\n                  null\n                </div>\n              </div>\n            )}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    columns: state.columns\n  };\n};\n\nBoard.propTypes = {\n  columns: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps)(Board);\n","import React from \"react\";\nimport \"./App.css\";\nimport SideBarContainer from \"./components/Sidebar/SidebarContainer\";\nimport Board from \"./components/Board/Board\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SideBarContainer />\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = [\n  {\n    id: \"column-0\",\n    name: \"Done\",\n    notes: [\n      {\n        id: \"note-0\",\n        content: \"quo temporibus omnis distinctio, laboriosam totam.\",\n        likes: []\n      },\n      {\n        id: \"note-1\",\n        content:\n          \"Labore recusandae nulla nesciunt esse, consequuntur fuga reiciendis consectetur.\",\n        likes: []\n      }\n    ]\n  },\n  {\n    id: \"column-1\",\n    name: \"ToDo\",\n    notes: [\n      {\n        id: \"note-2\",\n        content: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit.\",\n        likes: []\n      },\n      {\n        id: \"note-3\",\n        content:\n          \"Perspiciatis veniam eligendi placeat doloremque autem iusto amet eius officiis rerum neque\",\n        likes: []\n      },\n      {\n        id: \"note-4\",\n        content: \"Labore quis incidunt tempore hic ut. Fugit.\",\n        likes: []\n      }\n    ]\n  }\n];\n\nlet nextNoteId = initialState\n  .map(column => column.notes.length)\n  .reduce((prevVal, curentVal) => {\n    return prevVal + curentVal;\n  });\n\nlet nextColumnId = initialState.length;\n\nconst addNewColumn = (state, action) => {\n  const newColumn = {\n    name: action.payload,\n    notes: [],\n    id: `column-${nextColumnId}`\n  };\n  nextColumnId++;\n  return [...state, newColumn];\n};\n\nconst removeColumn = (state, action) => {\n  return state.filter(column => column.id !== action.payload.columnId);\n};\n\nconst addNewNote = (state, action) => {\n  const newNote = {\n    content: action.payload.content,\n    id: `note-${nextNoteId}`,\n    likes: []\n  };\n  nextNoteId++;\n  return state.map(column => {\n    if (column.id === action.payload.columnId) {\n      return {\n        ...column,\n        notes: [...column.notes, newNote]\n      };\n    } else {\n      return column;\n    }\n  });\n};\n\nconst removeNote = (state, action) => {\n  const { columnId, noteId } = action.payload;\n  return state.map(column => {\n    if (column.id === columnId) {\n      const newNotesArray = column.notes.filter(note => note.id !== noteId);\n      return { ...column, notes: newNotesArray };\n    } else {\n      return column;\n    }\n  });\n};\n\nconst dragHandle = (state, action) => {\n  const {\n    droppableIdStart,\n    droppableIdEnd,\n    droppableIndexStart,\n    droppableIndexEnd,\n    type\n  } = action.payload;\n  let newState = [...state];\n\n  if (type === \"list\") {\n    const column = newState.splice(droppableIndexStart, 1);\n    newState.splice(droppableIndexEnd, 0, ...column);\n    return newState;\n  }\n\n  if (droppableIdStart === droppableIdEnd) {\n    // in same column\n    const column = newState.find(column => column.id === droppableIdStart);\n    const note = column.notes.splice(droppableIndexStart, 1);\n    column.notes.splice(droppableIndexEnd, 0, ...note);\n  }\n\n  if (droppableIdStart !== droppableIdEnd) {\n    const columnStart = state.find(column => column.id === droppableIdStart);\n    const note = columnStart.notes.splice(droppableIndexStart, 1);\n    const columnEnd = state.find(column => column.id === droppableIdEnd);\n    columnEnd.notes.splice(droppableIndexEnd, 0, ...note);\n  }\n  return newState;\n};\n\nconst editColumnName = (state, action) => {\n  const { columnId, columnName } = action.payload;\n  return state.map(column => {\n    if (column.id === columnId && column.name !== columnName) {\n      return { ...column, name: columnName };\n    }\n    return { ...column };\n  });\n};\n\nconst likeHandle = (state, action) => {\n  const { noteId, likeAuthor } = action.payload;\n  return state.map(column => {\n    const newNotesList = column.notes.map(note => {\n      if (note.id === noteId) {\n        let newLikesArray = [...note.likes];\n        if (!newLikesArray.includes(likeAuthor)) {\n          newLikesArray.push(likeAuthor);\n        } else {\n          newLikesArray = newLikesArray.filter(author => author !== likeAuthor);\n        }\n        return { ...note, likes: newLikesArray };\n      } else {\n        return note;\n      }\n    });\n    return { ...column, notes: newNotesList };\n  });\n};\n\nconst editNoteContent = (state, action) => {\n  const { columnId, noteId, content } = action.payload;\n  return state.map(column => {\n    if (column.id === columnId) {\n      return {\n        ...column,\n        notes: column.notes.map(note => {\n          if (note.id === noteId && note.content !== content) {\n            return { ...note, content };\n          }\n          return note;\n        })\n      };\n    }\n    return column;\n  });\n};\n\nconst createReducer = (initialState, handlers) => {\n  return function reducer(state = initialState, action) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action);\n    } else {\n      return state;\n    }\n  };\n};\n\nconst columnReducer = createReducer(initialState, {\n  ADD_COLUMN: addNewColumn,\n  REMOVE_COLUMN: removeColumn,\n  EDIT_COLUMN_NAME: editColumnName,\n  DRAG_HAPPENED: dragHandle,\n  ADD_NOTE: addNewNote,\n  REMOVE_NOTE: removeNote,\n  EDIT_NOTE_CONTENT: editNoteContent,\n  HANDLE_LIKE: likeHandle\n});\n\nexport default columnReducer;\n","const initialState = {\n  isOpenSidebar: false\n};\n\nconst sidebarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SHOW_SIDEBAR\":\n      return { ...state, isOpenSidebar: true };\n    case \"HIDE_SIDEBAR\":\n      return { ...state, isOpenSidebar: false };\n    default:\n      return state;\n  }\n};\n\nexport default sidebarReducer;\n","import { combineReducers } from \"redux\";\nimport columnReducer from \"./columnReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\n\nexport default combineReducers({\n  columns: columnReducer,\n  sidebar: sidebarReducer\n});\n","import { createStore } from \"redux\";\nimport combineReducer from \"./reducers/index\";\n\nexport const store = createStore(combineReducer);\n\nstore.subscribe(() => {\n  console.log(store.getState());\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/App/App';\nimport { Provider } from 'react-redux';\nimport { store } from './App/store/index';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}